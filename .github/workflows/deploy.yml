name: Deploy to AWS ECS

on:
  push:
    branches:
      - main # main 브랜치에 푸시할 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. AWS 자격 증명 구성
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. S3로 파일 업로드
      - name: Upload files to S3
        run: |
          aws s3 cp dist/index.html s3://testpractice1020/index.html
          aws s3 cp dist/src/app.js s3://testpractice1020/src/app.js

      # 5. ECR 로그인
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URI }}
          
      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.AWS_ECR_URI }}/my-express-app:latest \
            --push .

      # 7. ECS 서비스 업데이트
      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster my-cluster \
            --service my-express-app-service1 \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}